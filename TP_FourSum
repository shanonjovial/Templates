### Given an array S of n integers, are there elements a, b, c, d in S such that a + b + c + d = 0? Find all unique combinations in the array which gives the sum of zero.


#### OPTION 1 ####
# O(n^3)
def fourSum(num, target):
    num.sort(); res = []
    for i in range(len(num)):
        if i > 0 and num[i] == num[i-1]: 
            continue 
        for j in range(i + 1 ,len (num)):
            if j > i + 1 and num[j] == num[j-1]: 
                continue 
            l = j + 1
            r = len(num) - 1
            while l < r:
                sum = num[i] + num[j] + num[l] + num[r]
                if sum > target:
                    r -= 1
                elif sum < target:
                    l += 1
                elif l > j + 1 and num[l] == num[l-1]:
                    l += 1
                elif r < len(num) - 1 and num[r] == num[r+1]:
                    r -= 1
                else :
                    res.append([num[i],num[j],num[l],num[r]])
                    l += 1
                    r -= 1
    return res
    
    
#### OPTION 2 ####
# O(n^2)
def fourSum2(num, target):
    numLen, res, dict = len(num), set(), {}
    if numLen < 4: 
        return []
    num.sort()
    for p in range(numLen): # O(n^2)
        for q in range(p+1 , numLen): 
            if num[p] + num[q] not in dict:
                dict[num[p] + num[q]] = [(p,q)]
            else :
                dict[num[p] + num[q]].append((p,q))
    for i in range(numLen): # O(n^2)
        for j in range(i+1, numLen-2 ):
            T = target-num[i]- num[j]
            if T in dict:
                for k in dict[T]:
                    if k[0] > j: res.add((num[i],num[j],num [k[0]],num[k[1 ]]))
    return [list(i) for i in res]
